{"version":3,"sources":["../src/index.js"],"names":["reactReduxMiddleware","ctx","next","config","method","request","response","body","undefined","routes","layout","reducers","graphqlSchema","graphqlRoot","url","default","Layout","require","Routes","reducer","promise","store","html","renderRoute","root","__html","helmet","renderStatic","scripts","getState","props","htmlAttributes","toComponent","bodyAttributes","title","meta","link","renderLayout","reactReduxMiddlewareInit","context","router","renderReactComponents","render","promises","length","Promise","all"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react'\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport { renderToString, renderToStaticMarkup } from 'react-dom/server'\nimport { StaticRouter } from 'react-router-dom'\nimport createPromiseCollector from 'ethical-utility-promise-collector'\nimport PromiseProvider from 'ethical-react-component-provider-promise'\nimport getInitScripts from 'ethical-scripts-frontend'\nimport { absolute } from 'ethical-utility-path'\nimport { graphql, buildSchema } from 'graphql'\nimport { Helmet } from 'react-helmet'\n\nconst reactReduxMiddleware = async (ctx, next, config) => {\n    const { method, request, response } = ctx\n    const { body } = response\n    if (body !== undefined) {\n        return await next()\n    }\n\n    const { routes, layout, reducers, graphqlSchema, graphqlRoot } = config\n    const { url } = request\n    const { default: Layout } = require(absolute(layout))\n    const { default: Routes } = require(absolute(routes))\n    const { default: reducer } = require(absolute(reducers))\n    const promise = createPromiseCollector()\n    const store = createStore(combineReducers(reducer))\n    const html = await renderRoute({ url, Routes, store, promise })\n    const root = <ethical-root dangerouslySetInnerHTML={ { __html: html } } />\n    const helmet = Helmet.renderStatic()\n    const scripts = getInitScripts(store.getState())\n    const props = {\n        html: helmet.htmlAttributes.toComponent(),\n        body: helmet.bodyAttributes.toComponent(),\n        title: helmet.title.toComponent(),\n        meta: helmet.meta.toComponent(),\n        link: helmet.link.toComponent(),\n        scripts,\n        root\n    }\n\n    response.body = renderLayout(Layout, props)\n\n    await next()\n}\n\nconst reactReduxMiddlewareInit = (config) => (\n    async (ctx, next) => await reactReduxMiddleware(ctx, next, config)\n)\n\nexport default reactReduxMiddlewareInit\n\nconst renderRoute = async (context) => {\n    const router = {}\n    const html = await renderReactComponents({ ...context, router })\n    const { url } = router\n    if (url) {\n        return renderRoute({ ...context, url })\n    }\n    return html\n}\n\nconst renderReactComponents = async (context) => {\n\n    const { url, router, Routes, store, promise } = context\n    const render = () => renderToString(\n        <PromiseProvider promise={promise}>\n            <Provider store={store}>\n                <StaticRouter context={router} location={url}>\n                    {Routes}\n                </StaticRouter>\n            </Provider>\n        </PromiseProvider>\n    )\n\n    const html = render()\n    const promises = promise()\n    const { length } = promises\n    if (length === 0) {\n        return html\n    }\n\n    await Promise.all(promises)\n    return render()\n}\n\nconst renderLayout = (Layout, props) => renderToStaticMarkup(\n    <Layout { ...{ ...props} } />\n)\n"]}